# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - release/*

variables:
  # Agent VM image name
  vmImageName: "ubuntu-latest"

  # Node Version 14.18
  nodeVersion: "14.18.0"

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)/www-service

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - checkout: self
          - checkout: git://Lanstad/environment-files

          - task: CopyFiles@2
            displayName: "Import env file"
            inputs:
              sourceFolder: "$(rootFolder)/../environment-files/staging/www"
              Contents: ".env"
              TargetFolder: "$(rootFolder)"
              OverWrite: true
              cleanTargetFolder: false

          - task: NodeTool@0
            inputs:
              versionSpec: "$(nodeVersion)"
            displayName: "Install Node.js"

          - script: npm install
            workingDirectory: $(projectRoot)
            displayName: "npm install --legacy-peer-deps"

          - script: npm run build --if-present
            displayName: "NPM build"
            workingDirectory: $(projectRoot)
            continueOnError: true

          - task: CopyFiles@2
            displayName: "Copy build"
            inputs:
              sourceFolder: "$(projectRoot)/build"
              Contents: "**/*"
              TargetFolder: "$(Build.ArtifactStagingDirectory)/app"
              cleanTargetFolder: true

          - upload: $(Build.ArtifactStagingDirectory)/app
            artifact: drop/
